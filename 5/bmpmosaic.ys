#----------------------------------------------------------------------
# 
#  4190.308 Computer Architecture (Fall 2018)
#
#  Project #5: Optimizing Performance on a Pipelined Y86-64 Processor
#
#  December 4, 2018
#
#  Jin-Soo Kim (jinsoo.kim@snu.ac.kr)
#  Systems Software & Architecture Laboratory
#  Dept. of Computer Science and Engineering
#  Seoul National University
#  http://csl.snu.ac.kr
#
#----------------------------------------------------------------------

bmp_mosaic:
	# imgptr is in %rdi
	# width  is in %rsi
	# height is in %rdx
	# size 	 is in %rcx
	#-----------------------------------------------------------------
    # %rax=?, %rbx=?, %rcx=size, %rdx=height
    # %rsi=width, %rdi=imgPtr, $rbp=?,%r8=?,
    # %r9=?, %r10=?, %r11=?, %r12=?
    # %r13=?, %r14=?
    # 1. calculate bitwidth
    irmovq $3, %rax
    rrmovq %rsi, %rbx
    rrmovq %rsi, %rbp
    andq %rax, %rbx
    mulq %rax, %rbp
    addq %rbp, %rbx
    # %rax=3, %rbx=bitWidth, %rcx=size, %rdx=height
    # %rsi=width, %rdi=imgPtr, $rbp=?, %r8=?,
    # %r9=?, %r10=?, %r11=?, %r12=?
    # %r13=?, %r14=?
    
    # 2. Calculate lastRow
    rrmovq %rdx, %rbp
    mulq %rbx, %rbp
    subq %rbx, %rbp
    # %rax=3, %rbx=bitWidth, %rcx=size, %rdx=height
    # %rsi=width, %rdi=imgPtr, $rbp=lastRow, %r8=?,
    # %r9=?, %r10=?, %r11=?, %r12=?
    # %r13=?, %r14=?
    
    # 3. Calculate bitWidth*size
    rrmovq %rcx, %r8
    mulq %rbx, %r8
    # %rax=3, %rbx=bitWidth, %rcx=size, %rdx=height
    # %rsi=width, %rdi=imgPtr, $rbp=lastRow, %r8=bitWidth*size,
    # %r9=?, %r10=?, %r11=?, %r12=?
    # %r13=?, %r14=?

    # 4. Calculate maxJ
    irmovq $1, %r10
    rrmovq %rdx, %r9
    subq %r10, %r9
    divq %rcx, %r9
    addq %r10, %r10
    # %rax=3, %rbx=bitWidth, %rcx=size, %rdx=height
    # %rsi=width, %rdi=imgPtr, $rbp=lastRow, %r8=bitWidth*size,
    # %r9=maxJ, %r10=1, %r11=?, %r12=?
    # %r13=?, %r14=?
    
    


















	#-----------------------------------------------------------------

	ret
